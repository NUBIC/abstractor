- about ||= @about
- namespace_type ||= @namespace_type
- namespace_id ||= @namespace_id
.abstractor_abstractions
  = link_to 'Not applicable all', Abstractor::UserInterface.abstractor_relative_path(abstractor.update_all_abstractor_abstractions_path(about_type: about.class, about_id: about.id, abstractor_abstraction_value: 'not applicable')), data: { confirm: 'Are you sure?'}, method: :put, class: 'abstractor_not_applicable_all_link'
  = link_to 'Unknown all', Abstractor::UserInterface.abstractor_relative_path(abstractor.update_all_abstractor_abstractions_path(about_type: about.class, about_id: about.id, abstractor_abstraction_value: 'unknown')), data: { confirm: 'Are you sure?'}, method: :put,  class: 'abstractor_unknown_all_link'
  - abstractor_subject_groups = about.class.abstractor_subject_groups(namespace_type: namespace_type, namespace_id: namespace_id)
  - abstractor_subject_groups.each do |abstractor_subject_group|
    .abstractor_subject_groups_container
      %b= abstractor_subject_group.name
      %fieldset
        .column-3
          %b Name
        .column-5
          %b Value
        .column-5
          %b Suggestions
        .column-3
          %b Status
        %hr
        .abstractor_subject_groups
          - abstractor_abstraction_groups = about.abstractor_abstraction_groups_by_namespace(namespace_type: namespace_type, namespace_id: namespace_id, abstractor_subject_group_id: abstractor_subject_group.id)
          - abstractor_abstraction_groups.each_with_index do |abstractor_abstraction_group, index|
            = render partial: 'abstractor/abstractor_abstraction_groups/form', locals: {abstractor_abstraction_group: abstractor_abstraction_group}
        = link_to 'Add group', Abstractor::UserInterface.abstractor_relative_path(abstractor.abstractor_abstraction_groups_path(about_id: about.id, about_type: about.class.name, abstractor_subject_group_id: abstractor_subject_group.id)),  data: { confirm: 'Are you sure?'}, method: :post, class: 'abstractor_group_add_link', remote: true
  .clear
  - ungrouped_subjects = about.class.abstractor_subjects(grouped: false, namespace_type: namespace_type, namespace_id: namespace_id)
  - if ungrouped_subjects.any?
    %fieldset
      .column-3
        %b Name
      .column-5
        %b Value
      .column-5
        %b Suggestions
      .column-3
        %b Status
      %hr
      - ungrouped_subjects.each do |ungrouped_subject|
        - ungrouped_subject.abstractor_abstractions.not_deleted.where(:about_id => about.id).each do |abstractor_abstraction|
          %div{ class: "abstractor_abstraction #{Abstractor::Utility.dehumanize(abstractor_abstraction.abstractor_subject.abstractor_abstraction_schema.predicate)}" }
            = render :partial => 'abstractor/abstractor_abstractions/fields', :locals => {:abstractor_abstraction => abstractor_abstraction}
#abstractor_abstraction_dialog_tooltip